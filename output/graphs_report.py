# -*- coding: utf-8 -*-
"""
Created on Fri Mar 13 08:39:07 2020

@author: AALAP RANA
"""

import numpy as np
import matplotlib.pyplot as plt





############################################### H_WALLDIST ########################################################################

################################## NODE SCATTER PLOT GBFS ############################
x = [8,13,13,11,11,11,16,9,11,18,22,22,28,33,12,17,12,16,22,41,127]
y = [42,165,319,63,2613,1157,2688,197,190,1456,1452,1560,2436,9945,2746,3003,139,1970,26962,22326,40000]
colors = (0,0,0)
area = np.pi*5
print(len(x))
print(len(y))
plt.scatter(x, y, s=area, c=colors, alpha=0.5)
plt.grid()
plt.title('Node generation GBFS-h_walldist and Domain Independent Planner')
plt.xlabel('Node generated by GBFS using h_walldist')
plt.ylabel('Node generated by Domain independent planner')
plt.show()
###################################################################################################################################

###################################################### CPU RUNTIME SCATTER PLOT ##################################################
x = [1525,3210,1563,1534,1577,1550,1735,3786,3711,4780,6614,7120,9429,35550,17055,15525,5973,5613,48606,49206,3600000]
y = [8711,5780,5925,4990,13650,10115,16156,5395,4245,16783,10438,15505,19081,68672,27660,35857,4502,23135,214082,196021,3600000]
colors = (0,0,0)
area = np.pi*5
print(len(x))
print(len(y))
plt.yscale('log')
plt.xscale('log')

plt.scatter(x, y, s=area, c=colors, alpha=0.5)

plt.grid()
plt.title('CPU Runtime GBFS-h_walldist and Domain Independent Planner')
plt.xlabel('CPU run time by GBFS using h_walldist (ms)')
plt.ylabel('CPU run time by Domain independent planner (ms)')
plt.show()

####################################################################################################################################









######################################       H_ESDIT  ######################################################################

################################## NODE SCATTER PLOT GBFS ############################
x = [6,9,9,9,9,9,14,9,125,1302,192,285,420,1077,18,56,91,1100,10658,8734,17673]
y = [42,165,319,63,2613,1157,2688,197,190,1456,1452,1560,2436,9945,2746,3003,139,1970,26962,22326,40000]
colors = (0,0,0)
area = np.pi*5
print(len(x))
print(len(y))
plt.scatter(x, y, s=area, c=colors, alpha=0.5)
plt.grid()
plt.title('Node generation GBFS-h_esdist and Domain Independent Planner')
plt.xlabel('Node generated by GBFS using h_esdist')
plt.ylabel('Node generated by Domain independent planner')
plt.show()
###################################################################################################################################

###################################################### CPU RUNTIME SCATTER PLOT ##################################################
x = [6469,8285,5712,945,6522,6482,1387,3923,6387,3400,2070,3784,63000,49469,1070,3619,3963,27070,3522756,1951001,3600000]
y = [8711,5780,5925,4990,13650,10115,16156,5395,4245,16783,10438,15505,19081,68672,27660,35857,4502,23135,214082,196021,3600000]
colors = (0,0,0)
area = np.pi*5
print(len(x))
print(len(y))
plt.yscale('log')
plt.xscale('log')
plt.scatter(x, y, s=area, c=colors, alpha=0.5)

plt.grid()
plt.title('CPU Runtime GBFS-h_esdist and Domain Independent Planner')
plt.xlabel('CPU run time by GBFS using h_esdist (ms)')
plt.ylabel('CPU run time by Domain independent planner (ms)')
plt.show()

###########################################line graph bwt h_edist h_walldist using GBFS############################################
prob=['1','2','3','4','5','6','7','8','9',' 10 ',' 11 ',' 12 ',' 13 ',' 14 ',' 15 ',' 16 ',' 17 ',' 18 ',' 19 ',' 20 ',' 21 ']
h_wall=[8,13,13,11,11,11,16,9,11,18,22,22,28,33,12,17,12,16,22,41,127]
h_esdist=[6,9,9,9,9,9,14,9,125,1302,192,285,420,1077,18,56,91,1100,10658,8734,17673]
fig, ax1 = plt.subplots()
color = 'tab:red'
ax1.set_xlabel('problem number using GBFS')
ax1.set_ylabel('h_walldist Nodes', color=color)
ax1.plot(prob, h_wall, color=color)
ax1.tick_params(axis='y', labelcolor=color)

ax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis

color = 'tab:blue'
ax2.set_ylabel('h_esdist Nodes', color=color)  # we already handled the x-label with ax1
ax2.plot(prob, h_esdist, color=color)
ax2.tick_params(axis='y', labelcolor=color)
plt.grid()
fig.tight_layout()  # otherwise the right y-label is slightly clipped
plt.show()
####################################################################################################################################
prob=['1','2','3','4','5','6','7','8','9',' 10 ',' 11 ',' 12 ',' 13 ',' 14 ',' 15 ',' 16 ',' 17 ',' 18 ',' 19 ',' 20 ',' 21 ']
cpu_h_wall= [1525,3210,1563,1534,1577,1550,1735,3786,3711,4780,6614,7120,9429,35550,17055,15525,5973,5613,48606,49206,3600000]
cpu_h_esdist= [6469,8285,5712,945,6522,6482,1387,3923,6387,3400,2070,3784,63000,49469,1070,3619,3963,27070,3522756,1951001,3600000]
fig, ax1 = plt.subplots()
color = 'tab:red'
ax1.set_xlabel('problem number')
ax1.set_ylabel('h_walldist CPU Runtime', color=color)
ax1.plot(prob, h_wall, color=color)
ax1.tick_params(axis='y', labelcolor=color)

ax2 = ax1.twinx()  # instantiate a second axes that shares the same x-axis

color = 'tab:blue'
ax2.set_ylabel('h_esdist CPU Runtime', color=color)  # we already handled the x-label with ax1
ax2.plot(prob, h_esdist, color=color)
ax2.tick_params(axis='y', labelcolor=color)
plt.grid()
fig.tight_layout()  # otherwise the right y-label is slightly clipped
plt.show()

